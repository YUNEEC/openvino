name: Android 64Bit release

on:
  release:
    types: [ created ]
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

defaults:
  run:
    shell: bash

env:
  OPENVINO_DIR:         ${{ github.workspace }}
  OPENVINO_CONTRIB_DIR: ${{ github.workspace }}/openvino_contrib

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Checkout openvino_contrib
      uses: actions/checkout@v3
      with:
        repository: openvinotoolkit/openvino_contrib
        ref: 2021.4
        path: openvino_contrib
        submodules: true
  
    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install ccache
      run:  sudo apt-get install ccache

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path:         ~/.ccache
        key:          ${{ runner.os }}-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Setup ccache
      run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 5" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z

    - name: Create build directory
      run:  mkdir ${{ runner.temp }}/shadow_build_dir

    - name: Build
      working-directory: ${{ runner.temp }}/shadow_build_dir
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=install \
              -DTHREADING=SEQ \
              -DIE_EXTRA_MODULES=$OPENVINO_CONTRIB_DIR \
              -DBUILD_java_api=ON \
              -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
              -DANDROID_ABI=arm64-v8a \
              -DANDROID_PLATFORM=30 \
              -DANDROID_STL=c++_shared \
              -DENABLE_SAMPLES=OFF \
              -DENABLE_OPENCV=OFF \
              -DENABLE_CLDNN=OFF \
              -DENABLE_VPU=ON \
              -DENABLE_GNA=OFF \
              -DENABLE_MYRIAD=ON \
              -DENABLE_TESTS=OFF \
              -DENABLE_GAPI_TESTS=OFF \
              -DENABLE_BEH_TESTS=OFF $OPENVINO_DIR
        make --jobs=$(nproc --all) install
        cd install && zip -y -r openvino-android-aarch64-sdk.zip .

    - name: Upload Release Binaries
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
        files: ${{ runner.temp }}/shadow_build_dir/install/openvino-android-aarch64-sdk.zip
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: ccache post-run
      run: ccache -s
